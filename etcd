#!/bin/sh

# set this to workaround expr problems in shFlags on freebsd
if uname -s | egrep -iq 'bsd'; then export EXPR_COMPAT=1; fi

# enable debug mode
if [ "$DEBUG" = "yes" ]; then
    set -x
fi

# The sed expression here replaces all backslashes by forward slashes.
# This helps our Windows users, while not bothering our Unix users.
export ETCD_DIR=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")

usage() {
    echo "usage: etcd <subcommand>"
    echo
    echo "Available subcommands are:"
    echo "  copy     复制目录和文件"
    echo "  add      新增目录和文件"
    echo "  update   修改目录和文件"
    echo "  delete   删除目录和文件"
    echo "  version  打印etcd脚本版本号"
    echo
    echo "Try 'etcd <subcommand> help' for details."
}

main() {
    if [ $# -lt 1 ]; then
        usage
        exit 1
    fi

    # load common functionality
    . "$ETCD_DIR/etcd-common"

    # This environmental variable fixes non-POSIX getopt style argument
    # parsing, effectively breaking siruis subcommand parsing on several
    # Linux platforms.
    export POSIXLY_CORRECT=1

    # use the shFlags project to parser the command line arguments
    . "$ETCD_DIR/etcd-shFlags"
    FLAGS_PARENT="etcd"

    # allow user to request git action logging
    DEFINE_boolean show_commands false 'show actions taken (etcd commands)' g

    # do actual parsing
    FLAGS "$@" || exit $?
    eval set -- "${FLAGS_ARGV}"

    # sanity checks
    SUBCOMMAND="$1"; shift

    if [ ! -e "$ETCD_DIR/etcd-$SUBCOMMAND" ]; then
        usage
        exit 1
    fi

    # run command
    . "$ETCD_DIR/etcd-$SUBCOMMAND"

    FLAGS_PARENT="git flow $SUBCOMMAND"

    # test if the first argument is a flag (i.e. starts with '-')
    # in that case, we interpret this arg as a flag for the default
    # command
    SUBACTION="default"
    if [ "$1" != "" ] && { ! echo "a$1" | grep -q "^a-"; } ; then
        SUBACTION="$1"; shift
    fi

    if ! type "cmd_$SUBACTION" >/dev/null 2>&1; then
        warn "Unknown subcommand: '$SUBACTION'"
        usage
        exit 1
    fi

    # run the specified action
    if [ $SUBACTION != "help" ] && [ $SUBCOMMAND != "init" ] ; then
        init
    fi

    cmd_$SUBACTION "$@"
}

main "$@"
